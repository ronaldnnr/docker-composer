version: '3.8'

networks:
  frontend:
    name: frontend
    external: true
    driver: bridge
  backend:
    name: backend
    external: false

services:
  proxyreverso:
    build:
      dockerfile: ./proxyreverso/Dockerfile
      context: .
    container_name: proxyreverso
    image: proxyreverso
    restart: unless-stopped
    networks:
      - frontend
      - backend
    ports:
      - 80:80
      - 443:443
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /opt/nginx/var/log/nginx:/var/log/nginx
    depends_on:
      - store
      - php2
      - whoami

  base:
    build:
      dockerfile: ./base/Dockerfile
      context: .
    container_name: base
    image: base
    networks:
      - backend
    stdin_open: true
    tty: true



  store:
    build:
      dockerfile: ./php/Dockerfile
      context: .
    container_name: store
    image: php
    restart: unless-stopped
    networks:
      - backend
    volumes:
      - ./php/php_conf/:/usr/local/etc/php/conf.d
      - /opt/store/var/log/apache2:/var/log/apache2
      - ./php/:/var/www/html
#      - /opt/store/var/www/html:/var/www/html

  php2:
    build:
      dockerfile: ./php/Dockerfile
      context: .
    container_name: php2
    image: php
    restart: unless-stopped
    networks:
      - backend
    volumes:
      - ./php/php_conf/:/usr/local/etc/php/conf.d
      - /opt/php2/var/log/apache2:/var/log/apache2
      - ./php2/:/var/www/html
#      - /opt/store/var/www/html:/var/www/html

  whoami:
    container_name: whoami
    image: jwilder/whoami
    restart: unless-stopped
    networks:
      - backend

  adminer:
    container_name: adminer
    image: adminer
    ports:
      - 7000:8080
    networks:
      - backend
      - frontend


  db:
    container_name: db_01
    build:
      context: .
      dockerfile: mysql/Dockerfile
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    networks:
      - backend
      - frontend
    environment:
      MYSQL_ROOT_PASSWORD: senha
    ports:
      - "3306:3306"
    volumes:
      - ./mysql/conf.d/:/etc/mysql/conf.d/

  db_slave:
    container_name: db_02
    build:
      context: .
      dockerfile: slave/Dockerfile
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    networks:
      - backend
      - frontend
    environment:
      MYSQL_ROOT_PASSWORD: senha
    ports:
      - "3308:3306"
    volumes:
      - ./mysql_slave/conf.d/:/etc/mysql/conf.d/



  redis:
    container_name: redis
    image: redis
    networks:
      - backend
      - frontend
    command: redis-server --requirepass Redis2019!
    ports:
      - "6379:6379"


  logs:
    container_name: logs
    build: 
      context: .
      dockerfile: logs/Dockerfile
    restart: unless-stopped
    networks:
      - backend
      - frontend
    volumes:
      - /opt/logs/:/var/www/html

  mongo:
    container_name: mongo
    image: mongo:3-xenial
    restart: unless-stopped
    ports:
      - "27018:27017"
    networks:
      - backend
    volumes:
      - /opt/mongo:/data/db

  report:
    container_name: report
    image: elasticsearch:6.8.12
    restart: unless-stopped
    networks:
      - backend
      - frontend
    environment:
      - http.host=0.0.0.0
      - transport.host=localhost
      - network.host=0.0.0.0
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - /opt/elasticsearch/data:/usr/share/elasticsearch/data

  graylog:
    user: root
    container_name: graylog
    image: graylog/graylog:3.3.6
    restart: unless-stopped
    networks:
      - backend
      - frontend
    environment:
      - TZ=America/Sao_Paulo
      - GRAYLOG_ROOT_TIMEZONE=America/Sao_Paulo
      - GRAYLOG_PASSWORD_SECRET=suasenhacom16caracteres
      - GRAYLOG_ROOT_PASSWORD_SHA2=8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
      - GRAYLOG_HTTP_EXTERNAL_URI=http://127.0.0.1/graylog/
      - GRAYLOG_ELASTICSEARCH_INDEX_PREFIX=graylog
    depends_on:
      - report
      - mongo
    ports:
      # Graylog web interface and REST API
      - 9000:9000
      # Syslog TCP
      - 1514:1514
      - 1515:1515
      # Syslog UDP
      - 1514:1514/udp
      - 1515:1515/udp
      # GELF TCP
      - 12201:12201
      # GELF UDP
      - 12201:12201/udp
    volumes:
      - /opt/graylog/journal:/usr/share/logs/data/journal

  grafana:
    image: grafana/grafana
    volumes:
      - /opt/grafana_data:/var/lib/grafana
    env_file:
      - grafana.config
    networks:
      - backend
      - frontend
    ports:
      - 3000:3000

  checkout:
    container_name: checkout
    build: 
      context: .
      dockerfile: checkout/Dockerfile
    restart: unless-stopped
    networks:
      - backend
    volumes:
#      - /opt/checkout:/var/www/html
      - ./checkout:/var/www/html

  web_api:
    container_name: web_api
    image: php:7.4-apache
    restart: unless-stopped
    networks:
      - backend
    volumes:
#      - /opt/api:/var/www/html
      - ./web_api:/var/www/html

